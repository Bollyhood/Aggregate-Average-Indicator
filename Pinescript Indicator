// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © bollyhood
// this script has been made to save you time from manually updating your indicator spreadsheet

//@version=5
indicator("My script")
import TradingView/ta/7
lengthrsi = input(14, "RSI: Length")
lengtharoon = input(14, "AROON: Length")
lengthdmi = input(14, "DMI: DI Length")
adxsmoothing = input(14, "DMI: ADX Smoothing")
macdfastlen = input(12, "MACD: Fast Length")
macdslowlen = input(26, "MACD: Slow Length")
macdsiglen = input(9, "MACD: Signal Smoothing")
sarstart = input(0.02, "SAR: Start")
sarincr = input(0.001, "SAR: Increment")
sarmax = input(0.2, "SAR: Max")
superfactor = input.float(3.0, "SUPERTREND: Factor", minval = 0.01, step = 0.01)
superatrperiod = input.int(10, "SUPERTREND: ATR Length", minval = 1)
longlen = input.int(20, minval=1, title="SMII: Long Length")
shortlen = input.int(5, minval=1, title="SMII: Short Length")
siglen = input.int(5, minval=1, title="SMII: Signal Line Length")

// assigning tuples from prebuilt functions
[plusdmi, negdmi, adxdmi] = ta.dmi(lengthdmi, adxsmoothing)
[aroonup, aroondown] = ta.aroon(lengtharoon)
[macdline, signalline, histoline] = ta.macd(close, macdfastlen, macdslowlen, macdsiglen)
[strendline, sdirection] = ta.supertrend(superfactor, superatrperiod)

// assigning the trend up or trend down values (1 or -1) for each indicator
rsitrend = ta.rsi(close, lengthrsi) > 50 ? 1 : -1
aroontrend = aroonup < aroondown ? 1 : -1
dmitrend = plusdmi > negdmi ? 1 : -1
macdtrend = macdline > signalline ? 1 : -1
sartrend = ta.sar(sarstart, sarincr, sarmax) > close ? 1 : -1
supertrend = sdirection < 0 ? 1 : -1
smiitrend = ta.tsi(close, shortlen, longlen) > ta.ema(ta.tsi(close, shortlen, longlen), siglen) ? 1 : -1

// summing and averaging the result, should range from -1 to 1, with 1 being the most bullish trend and -1 being the most bearish trend
sum = smiitrend + supertrend + sartrend + macdtrend + dmitrend + aroontrend + rsitrend
average = sum/7

// table to show each individual current signal trend
Table_Def = table.new(position = position.middle_right, columns = 2, rows = 8, bgcolor =  color.white, frame_color = color.black, frame_width = 2, border_width = 2)
table.cell(Table_Def, column = 0, row = 0, text = "Indicator")
table.cell(Table_Def, column = 1, row = 0, text = "Status")
table.cell(Table_Def, column = 0, row = 1, text = "RSI")
table.cell(Table_Def, column = 0, row = 2, text = "AROON")
table.cell(Table_Def, column = 0, row = 3, text = "DMI")
table.cell(Table_Def, column = 0, row = 4, text = "MACD")
table.cell(Table_Def, column = 0, row = 5, text = "Parabol SAR")
table.cell(Table_Def, column = 0, row = 6, text = "Supertrend")
table.cell(Table_Def, column = 0, row = 7, text = "SMII")

table.cell(Table_Def, column = 1, row = 1, text = ta.rsi(close, lengthrsi) > 50 ? "Bull" : "Bear", bgcolor = ta.rsi(close, lengthrsi) > 50 ? color.green : color.red)
table.cell(Table_Def, column = 1, row = 2, text = aroonup < aroondown ? "Bull" : "Bear", bgcolor = aroonup < aroondown ? color.green : color.red)
table.cell(Table_Def, column = 1, row = 3, text = plusdmi > negdmi ? "Bull" : "Bear", bgcolor = plusdmi > negdmi ?color.green : color.red)
table.cell(Table_Def, column = 1, row = 4, text = macdline > signalline ? "Bull" : "Bear", bgcolor = macdline > signalline ?color.green : color.red)
table.cell(Table_Def, column = 1, row = 5, text = ta.sar(sarstart, sarincr, sarmax) > close ? "Bull" : "Bear", bgcolor = ta.sar(sarstart, sarincr, sarmax) > close ?color.green : color.red)
table.cell(Table_Def, column = 1, row = 6, text = sdirection < 0 ? "Bull" : "Bear", bgcolor = sdirection < 0 ?color.green : color.red)
table.cell(Table_Def, column = 1, row = 7, text = ta.tsi(close, shortlen, longlen) > ta.ema(ta.tsi(close, shortlen, longlen), siglen) ? "Bull" : "Bear", bgcolor = ta.tsi(close, shortlen, longlen) > ta.ema(ta.tsi(close, shortlen, longlen), siglen) ?color.green : color.red)

hline(1, color = color.gray)
hline(-1, color = color.gray)
hline(0, color=color.new(#787B86, 50))

plot(average)
